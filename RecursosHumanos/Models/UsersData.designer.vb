'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Recursos_H")>  _
Partial Public Class UsersDataDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertempleado(instance As empleado)
    End Sub
  Partial Private Sub Updateempleado(instance As empleado)
    End Sub
  Partial Private Sub Deleteempleado(instance As empleado)
    End Sub
  Partial Private Sub Insertdepartamento(instance As departamento)
    End Sub
  Partial Private Sub Updatedepartamento(instance As departamento)
    End Sub
  Partial Private Sub Deletedepartamento(instance As departamento)
    End Sub
  Partial Private Sub Insertpuesto(instance As puesto)
    End Sub
  Partial Private Sub Updatepuesto(instance As puesto)
    End Sub
  Partial Private Sub Deletepuesto(instance As puesto)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("Recursos_HConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property empleado() As System.Data.Linq.Table(Of empleado)
		Get
			Return Me.GetTable(Of empleado)
		End Get
	End Property
	
	Public ReadOnly Property departamento() As System.Data.Linq.Table(Of departamento)
		Get
			Return Me.GetTable(Of departamento)
		End Get
	End Property
	
	Public ReadOnly Property puesto() As System.Data.Linq.Table(Of puesto)
		Get
			Return Me.GetTable(Of puesto)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.empleado")>  _
Partial Public Class empleado
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_empleado As Integer
	
	Private _nombre As String
	
	Private _apellido As String
	
	Private _dpi As String
	
	Private _nit As System.Nullable(Of Integer)
	
	Private _edad As Integer
	
	Private _nacionalidad As String
	
	Private _fecha_nacimiento As System.Nullable(Of Date)
	
	Private _telefono As System.Nullable(Of Integer)
	
	Private _sexo As String
	
	Private _estado_civil As String
	
	Private _id_jornada As System.Nullable(Of Integer)
	
	Private _id_salario As System.Nullable(Of Integer)
	
	Private _id_horario As System.Nullable(Of Integer)
	
	Private _id_departamento As System.Nullable(Of Integer)
	
	Private _id_empresa As System.Nullable(Of Integer)
	
	Private _id_puesto As System.Nullable(Of Integer)
	
	Private _departamento As EntityRef(Of departamento)
	
	Private _puesto As EntityRef(Of puesto)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_empleadoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_empleadoChanged()
    End Sub
    Partial Private Sub OnnombreChanging(value As String)
    End Sub
    Partial Private Sub OnnombreChanged()
    End Sub
    Partial Private Sub OnapellidoChanging(value As String)
    End Sub
    Partial Private Sub OnapellidoChanged()
    End Sub
    Partial Private Sub OndpiChanging(value As String)
    End Sub
    Partial Private Sub OndpiChanged()
    End Sub
    Partial Private Sub OnnitChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnnitChanged()
    End Sub
    Partial Private Sub OnedadChanging(value As Integer)
    End Sub
    Partial Private Sub OnedadChanged()
    End Sub
    Partial Private Sub OnnacionalidadChanging(value As String)
    End Sub
    Partial Private Sub OnnacionalidadChanged()
    End Sub
    Partial Private Sub Onfecha_nacimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onfecha_nacimientoChanged()
    End Sub
    Partial Private Sub OntelefonoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntelefonoChanged()
    End Sub
    Partial Private Sub OnsexoChanging(value As String)
    End Sub
    Partial Private Sub OnsexoChanged()
    End Sub
    Partial Private Sub Onestado_civilChanging(value As String)
    End Sub
    Partial Private Sub Onestado_civilChanged()
    End Sub
    Partial Private Sub Onid_jornadaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_jornadaChanged()
    End Sub
    Partial Private Sub Onid_salarioChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_salarioChanged()
    End Sub
    Partial Private Sub Onid_horarioChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_horarioChanged()
    End Sub
    Partial Private Sub Onid_departamentoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_departamentoChanged()
    End Sub
    Partial Private Sub Onid_empresaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_empresaChanged()
    End Sub
    Partial Private Sub Onid_puestoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onid_puestoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._departamento = CType(Nothing, EntityRef(Of departamento))
		Me._puesto = CType(Nothing, EntityRef(Of puesto))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_empleado", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_empleado() As Integer
		Get
			Return Me._id_empleado
		End Get
		Set
			If ((Me._id_empleado = value)  _
						= false) Then
				Me.Onid_empleadoChanging(value)
				Me.SendPropertyChanging
				Me._id_empleado = value
				Me.SendPropertyChanged("id_empleado")
				Me.Onid_empleadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nombre", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property nombre() As String
		Get
			Return Me._nombre
		End Get
		Set
			If (String.Equals(Me._nombre, value) = false) Then
				Me.OnnombreChanging(value)
				Me.SendPropertyChanging
				Me._nombre = value
				Me.SendPropertyChanged("nombre")
				Me.OnnombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_apellido", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property apellido() As String
		Get
			Return Me._apellido
		End Get
		Set
			If (String.Equals(Me._apellido, value) = false) Then
				Me.OnapellidoChanging(value)
				Me.SendPropertyChanging
				Me._apellido = value
				Me.SendPropertyChanged("apellido")
				Me.OnapellidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dpi", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property dpi() As String
		Get
			Return Me._dpi
		End Get
		Set
			If (String.Equals(Me._dpi, value) = false) Then
				Me.OndpiChanging(value)
				Me.SendPropertyChanging
				Me._dpi = value
				Me.SendPropertyChanged("dpi")
				Me.OndpiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nit", DbType:="Int")>  _
	Public Property nit() As System.Nullable(Of Integer)
		Get
			Return Me._nit
		End Get
		Set
			If (Me._nit.Equals(value) = false) Then
				Me.OnnitChanging(value)
				Me.SendPropertyChanging
				Me._nit = value
				Me.SendPropertyChanged("nit")
				Me.OnnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_edad", DbType:="Int NOT NULL")>  _
	Public Property edad() As Integer
		Get
			Return Me._edad
		End Get
		Set
			If ((Me._edad = value)  _
						= false) Then
				Me.OnedadChanging(value)
				Me.SendPropertyChanging
				Me._edad = value
				Me.SendPropertyChanged("edad")
				Me.OnedadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nacionalidad", DbType:="VarChar(45)")>  _
	Public Property nacionalidad() As String
		Get
			Return Me._nacionalidad
		End Get
		Set
			If (String.Equals(Me._nacionalidad, value) = false) Then
				Me.OnnacionalidadChanging(value)
				Me.SendPropertyChanging
				Me._nacionalidad = value
				Me.SendPropertyChanged("nacionalidad")
				Me.OnnacionalidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha_nacimiento", DbType:="Date")>  _
	Public Property fecha_nacimiento() As System.Nullable(Of Date)
		Get
			Return Me._fecha_nacimiento
		End Get
		Set
			If (Me._fecha_nacimiento.Equals(value) = false) Then
				Me.Onfecha_nacimientoChanging(value)
				Me.SendPropertyChanging
				Me._fecha_nacimiento = value
				Me.SendPropertyChanged("fecha_nacimiento")
				Me.Onfecha_nacimientoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_telefono", DbType:="Int")>  _
	Public Property telefono() As System.Nullable(Of Integer)
		Get
			Return Me._telefono
		End Get
		Set
			If (Me._telefono.Equals(value) = false) Then
				Me.OntelefonoChanging(value)
				Me.SendPropertyChanging
				Me._telefono = value
				Me.SendPropertyChanged("telefono")
				Me.OntelefonoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sexo", DbType:="VarChar(9) NOT NULL", CanBeNull:=false)>  _
	Public Property sexo() As String
		Get
			Return Me._sexo
		End Get
		Set
			If (String.Equals(Me._sexo, value) = false) Then
				Me.OnsexoChanging(value)
				Me.SendPropertyChanging
				Me._sexo = value
				Me.SendPropertyChanged("sexo")
				Me.OnsexoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_estado_civil", DbType:="VarChar(7)")>  _
	Public Property estado_civil() As String
		Get
			Return Me._estado_civil
		End Get
		Set
			If (String.Equals(Me._estado_civil, value) = false) Then
				Me.Onestado_civilChanging(value)
				Me.SendPropertyChanging
				Me._estado_civil = value
				Me.SendPropertyChanged("estado_civil")
				Me.Onestado_civilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_jornada", DbType:="Int")>  _
	Public Property id_jornada() As System.Nullable(Of Integer)
		Get
			Return Me._id_jornada
		End Get
		Set
			If (Me._id_jornada.Equals(value) = false) Then
				Me.Onid_jornadaChanging(value)
				Me.SendPropertyChanging
				Me._id_jornada = value
				Me.SendPropertyChanged("id_jornada")
				Me.Onid_jornadaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_salario", DbType:="Int")>  _
	Public Property id_salario() As System.Nullable(Of Integer)
		Get
			Return Me._id_salario
		End Get
		Set
			If (Me._id_salario.Equals(value) = false) Then
				Me.Onid_salarioChanging(value)
				Me.SendPropertyChanging
				Me._id_salario = value
				Me.SendPropertyChanged("id_salario")
				Me.Onid_salarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_horario", DbType:="Int")>  _
	Public Property id_horario() As System.Nullable(Of Integer)
		Get
			Return Me._id_horario
		End Get
		Set
			If (Me._id_horario.Equals(value) = false) Then
				Me.Onid_horarioChanging(value)
				Me.SendPropertyChanging
				Me._id_horario = value
				Me.SendPropertyChanged("id_horario")
				Me.Onid_horarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_departamento", DbType:="Int")>  _
	Public Property id_departamento() As System.Nullable(Of Integer)
		Get
			Return Me._id_departamento
		End Get
		Set
			If (Me._id_departamento.Equals(value) = false) Then
				If Me._departamento.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_departamentoChanging(value)
				Me.SendPropertyChanging
				Me._id_departamento = value
				Me.SendPropertyChanged("id_departamento")
				Me.Onid_departamentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_empresa", DbType:="Int")>  _
	Public Property id_empresa() As System.Nullable(Of Integer)
		Get
			Return Me._id_empresa
		End Get
		Set
			If (Me._id_empresa.Equals(value) = false) Then
				Me.Onid_empresaChanging(value)
				Me.SendPropertyChanging
				Me._id_empresa = value
				Me.SendPropertyChanged("id_empresa")
				Me.Onid_empresaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_puesto", DbType:="Int")>  _
	Public Property id_puesto() As System.Nullable(Of Integer)
		Get
			Return Me._id_puesto
		End Get
		Set
			If (Me._id_puesto.Equals(value) = false) Then
				If Me._puesto.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.Onid_puestoChanging(value)
				Me.SendPropertyChanging
				Me._id_puesto = value
				Me.SendPropertyChanged("id_puesto")
				Me.Onid_puestoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="departamento_empleado", Storage:="_departamento", ThisKey:="id_departamento", OtherKey:="id_departamento", IsForeignKey:=true)>  _
	Public Property departamento() As departamento
		Get
			Return Me._departamento.Entity
		End Get
		Set
			Dim previousValue As departamento = Me._departamento.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._departamento.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._departamento.Entity = Nothing
					previousValue.empleado.Remove(Me)
				End If
				Me._departamento.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.empleado.Add(Me)
					Me._id_departamento = value.id_departamento
				Else
					Me._id_departamento = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("departamento")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="puesto_empleado", Storage:="_puesto", ThisKey:="id_puesto", OtherKey:="id_puesto", IsForeignKey:=true)>  _
	Public Property puesto() As puesto
		Get
			Return Me._puesto.Entity
		End Get
		Set
			Dim previousValue As puesto = Me._puesto.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._puesto.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._puesto.Entity = Nothing
					previousValue.empleado.Remove(Me)
				End If
				Me._puesto.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.empleado.Add(Me)
					Me._id_puesto = value.id_puesto
				Else
					Me._id_puesto = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("puesto")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.departamento")>  _
Partial Public Class departamento
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_departamento As Integer
	
	Private _nombre_dep As String
	
	Private _funcion_dep As String
	
	Private _fecha_ingreso As Date
	
	Private _empleado As EntitySet(Of empleado)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_departamentoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_departamentoChanged()
    End Sub
    Partial Private Sub Onnombre_depChanging(value As String)
    End Sub
    Partial Private Sub Onnombre_depChanged()
    End Sub
    Partial Private Sub Onfuncion_depChanging(value As String)
    End Sub
    Partial Private Sub Onfuncion_depChanged()
    End Sub
    Partial Private Sub Onfecha_ingresoChanging(value As Date)
    End Sub
    Partial Private Sub Onfecha_ingresoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._empleado = New EntitySet(Of empleado)(AddressOf Me.attach_empleado, AddressOf Me.detach_empleado)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_departamento", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_departamento() As Integer
		Get
			Return Me._id_departamento
		End Get
		Set
			If ((Me._id_departamento = value)  _
						= false) Then
				Me.Onid_departamentoChanging(value)
				Me.SendPropertyChanging
				Me._id_departamento = value
				Me.SendPropertyChanged("id_departamento")
				Me.Onid_departamentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nombre_dep", DbType:="VarChar(45) NOT NULL", CanBeNull:=false)>  _
	Public Property nombre_dep() As String
		Get
			Return Me._nombre_dep
		End Get
		Set
			If (String.Equals(Me._nombre_dep, value) = false) Then
				Me.Onnombre_depChanging(value)
				Me.SendPropertyChanging
				Me._nombre_dep = value
				Me.SendPropertyChanged("nombre_dep")
				Me.Onnombre_depChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_funcion_dep", DbType:="VarChar(45) NOT NULL", CanBeNull:=false)>  _
	Public Property funcion_dep() As String
		Get
			Return Me._funcion_dep
		End Get
		Set
			If (String.Equals(Me._funcion_dep, value) = false) Then
				Me.Onfuncion_depChanging(value)
				Me.SendPropertyChanging
				Me._funcion_dep = value
				Me.SendPropertyChanged("funcion_dep")
				Me.Onfuncion_depChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fecha_ingreso", DbType:="Date NOT NULL")>  _
	Public Property fecha_ingreso() As Date
		Get
			Return Me._fecha_ingreso
		End Get
		Set
			If ((Me._fecha_ingreso = value)  _
						= false) Then
				Me.Onfecha_ingresoChanging(value)
				Me.SendPropertyChanging
				Me._fecha_ingreso = value
				Me.SendPropertyChanged("fecha_ingreso")
				Me.Onfecha_ingresoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="departamento_empleado", Storage:="_empleado", ThisKey:="id_departamento", OtherKey:="id_departamento")>  _
	Public Property empleado() As EntitySet(Of empleado)
		Get
			Return Me._empleado
		End Get
		Set
			Me._empleado.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_empleado(ByVal entity As empleado)
		Me.SendPropertyChanging
		entity.departamento = Me
	End Sub
	
	Private Sub detach_empleado(ByVal entity As empleado)
		Me.SendPropertyChanging
		entity.departamento = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.puesto")>  _
Partial Public Class puesto
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id_puesto As Integer
	
	Private _nombre_puesto As String
	
	Private _empleado As EntitySet(Of empleado)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onid_puestoChanging(value As Integer)
    End Sub
    Partial Private Sub Onid_puestoChanged()
    End Sub
    Partial Private Sub Onnombre_puestoChanging(value As String)
    End Sub
    Partial Private Sub Onnombre_puestoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._empleado = New EntitySet(Of empleado)(AddressOf Me.attach_empleado, AddressOf Me.detach_empleado)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_puesto", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id_puesto() As Integer
		Get
			Return Me._id_puesto
		End Get
		Set
			If ((Me._id_puesto = value)  _
						= false) Then
				Me.Onid_puestoChanging(value)
				Me.SendPropertyChanging
				Me._id_puesto = value
				Me.SendPropertyChanged("id_puesto")
				Me.Onid_puestoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nombre_puesto", DbType:="VarChar(35) NOT NULL", CanBeNull:=false)>  _
	Public Property nombre_puesto() As String
		Get
			Return Me._nombre_puesto
		End Get
		Set
			If (String.Equals(Me._nombre_puesto, value) = false) Then
				Me.Onnombre_puestoChanging(value)
				Me.SendPropertyChanging
				Me._nombre_puesto = value
				Me.SendPropertyChanged("nombre_puesto")
				Me.Onnombre_puestoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="puesto_empleado", Storage:="_empleado", ThisKey:="id_puesto", OtherKey:="id_puesto")>  _
	Public Property empleado() As EntitySet(Of empleado)
		Get
			Return Me._empleado
		End Get
		Set
			Me._empleado.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_empleado(ByVal entity As empleado)
		Me.SendPropertyChanging
		entity.puesto = Me
	End Sub
	
	Private Sub detach_empleado(ByVal entity As empleado)
		Me.SendPropertyChanging
		entity.puesto = Nothing
	End Sub
End Class
